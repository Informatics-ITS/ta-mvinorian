import {
  AmphoraIcon,
  BandageIcon,
  BookKeyIcon,
  BookLockIcon,
  BracesIcon,
  BrainIcon,
  BugIcon,
  CircleIcon,
  CookieIcon,
  DatabaseBackupIcon,
  DoorOpenIcon,
  EraserIcon,
  EthernetPortIcon,
  FileSearchIcon,
  FishIcon,
  FlameIcon,
  GlobeLockIcon,
  KeyRoundIcon,
  LayoutGridIcon,
  LockIcon,
  LogsIcon,
  NetworkIcon,
  RocketIcon,
  ScrollTextIcon,
  ShieldEllipsisIcon,
  ShieldUserIcon,
  SquareChartGanttIcon,
  VenetianMaskIcon,
  WorkflowIcon,
} from 'lucide-react';

import { GameCardType } from '@/lib/game-card';

export const GAME_CARDS: GameCardType[] = [
  {
    id: 'cas-network-scanning',
    name: 'Network Scanning',
    desc: 'Scan the network. Reveal tokens of target node.',
    role: 'attacker',
    type: 'stealth',
    icon: NetworkIcon,
  },
  {
    id: 'cas-social-engineering',
    name: 'Social Engineering',
    desc: 'Manipulate defender action. Reveal 1 random defender card in hand.',
    role: 'attacker',
    type: 'stealth',
    icon: BrainIcon,
  },
  {
    id: 'cas-port-scanning',
    name: 'Port Scanning',
    desc: 'Scan for active port in target node. Reveal 1 active defense of target node.',
    role: 'attacker',
    type: 'stealth',
    icon: EthernetPortIcon,
  },
  {
    id: 'cas-vpn-tunneling',
    name: 'VPN Tunneling',
    desc: 'Use VPN to attack. Next attack cannot be detected.',
    role: 'attacker',
    type: 'stealth',
    icon: GlobeLockIcon,
  },
  {
    id: 'cas-lateral-movement',
    name: 'Lateral Movement',
    desc: 'After successful attack. Reveal the security level of adjacent node.',
    role: 'attacker',
    type: 'stealth',
    icon: WorkflowIcon,
  },
  {
    id: 'caa-sql-injection',
    name: 'SQL Injection',
    desc: 'Inject an SQL payload. Steal 1 data token from Database Server. Action revealed if failed.',
    role: 'attacker',
    type: 'attack',
    icon: SquareChartGanttIcon,
  },
  {
    id: 'caa-phishing-attack',
    name: 'Phising Attack',
    desc: 'Trick user into revealing credential. Steal 1 data token from a Workstation.',
    role: 'attacker',
    type: 'attack',
    icon: FishIcon,
  },
  {
    id: 'caa-zero-day-exploit',
    name: 'Zero-Day Exploit',
    desc: 'Bypass all defenses to steal 1 data token from a node. After use reveal 1 random attacker card.',
    role: 'attacker',
    type: 'attack',
    icon: CircleIcon,
  },
  {
    id: 'caa-ransomware-attack',
    name: 'Ransomware Attack',
    desc: "Locks a node for 1 turn steal 1 data token if doesn't countered next turn.",
    role: 'attacker',
    type: 'attack',
    icon: BugIcon,
  },
  {
    id: 'caa-man-in-the-middle',
    name: 'Man-in-the-Middle',
    desc: 'Sniff adjacent node. Redirect Attack effects to adjacent node.',
    role: 'attacker',
    type: 'attack',
    icon: VenetianMaskIcon,
  },
  {
    id: 'cad-ddos-attack',
    name: 'DDoS Attack',
    desc: 'Distributed Denial of Service. Prevent the defender from playing a card on target node this turn.',
    role: 'attacker',
    type: 'disrupt',
    icon: RocketIcon,
  },
  {
    id: 'cad-log-tampering',
    name: 'Log Tampering',
    desc: "Modify the log. Negate Detect card's effect this turn if played by defender.",
    role: 'attacker',
    type: 'disrupt',
    icon: EraserIcon,
  },
  {
    id: 'cad-backdoor-installation',
    name: 'Backdoor Installation',
    desc: 'Install backdoor on target node. Next attack on target node will ignore 1 defense.',
    role: 'attacker',
    type: 'disrupt',
    icon: DoorOpenIcon,
  },
  {
    id: 'cad-privilege-escalation',
    name: 'Privilege Escalation',
    desc: "Gain admin access. Ignore Block card's effect on target node if played by defender.",
    role: 'attacker',
    type: 'disrupt',
    icon: ShieldUserIcon,
  },
  {
    id: 'cad-session-hijacking',
    name: 'Session Hijacking',
    desc: 'Copy the effect of last successful Attack card and played on target node.',
    role: 'attacker',
    type: 'disrupt',
    icon: CookieIcon,
  },
  {
    id: 'cdb-firewall-upgrade',
    name: 'Firewall Upgrade',
    desc: 'Add or upgrade firewall on target node. Next attack on this node fails.',
    role: 'defender',
    type: 'block',
    icon: FlameIcon,
  },
  {
    id: 'cdb-access-control-policy',
    name: 'Access Control Policy',
    desc: 'Deploy Access Control Policy. Prevent attacker to play Attack card next turn.',
    role: 'defender',
    type: 'block',
    icon: LockIcon,
  },
  {
    id: 'cdb-mfa-implementation',
    name: 'MFA Implementation',
    desc: 'Implement Multi-Factor Authentication. Prevent attack to Workstation for 1 attack.',
    role: 'defender',
    type: 'block',
    icon: KeyRoundIcon,
  },
  {
    id: 'cdb-endpoint-protection',
    name: 'Endpoint Protection',
    desc: 'If attacker plays Zero-Day Exploit on target node attacker must remove 1 random card.',
    role: 'defender',
    type: 'block',
    icon: BracesIcon,
  },
  {
    id: 'cdb-network-segmentation',
    name: 'Network Segmentation',
    desc: 'Segregate network. Target node cannot be attacked this turn.',
    role: 'defender',
    type: 'block',
    icon: LayoutGridIcon,
  },
  {
    id: 'cdd-obfuscation-shield',
    name: 'Obfuscation Shield',
    desc: 'Add obfuscation shield. Hide target node security level if attacker use Stealth card.',
    role: 'defender',
    type: 'detect',
    icon: ShieldEllipsisIcon,
  },
  {
    id: 'cdd-security-awareness',
    name: 'Security Awareness',
    desc: 'Train opeartor security awareness. Reveal 1 attacker card in hand.',
    role: 'defender',
    type: 'detect',
    icon: BookLockIcon,
  },
  {
    id: 'cdd-honeypot',
    name: 'Honeypot',
    desc: "Deploy honeypot on target node. Ignore Stealth card's effect on target node if played by attacker.",
    role: 'defender',
    type: 'detect',
    icon: AmphoraIcon,
  },
  {
    id: 'cdd-network-monitoring',
    name: 'Network Monitoring',
    desc: "Monitor network. Reveal attacker's last played card.",
    role: 'defender',
    type: 'detect',
    icon: NetworkIcon,
  },
  {
    id: 'cdd-log-analysis',
    name: 'Log Analysis',
    desc: 'Analyze log from nodes. Reveal attacked node if an attack happen last turn.',
    role: 'defender',
    type: 'detect',
    icon: LogsIcon,
  },
  {
    id: 'cdr-data-recovery-protocol',
    name: 'Data Recovery Protocol',
    desc: 'Repair target node data. Return 1 stolen data token from target node.',
    role: 'defender',
    type: 'recover',
    icon: DatabaseBackupIcon,
  },
  {
    id: 'cdr-vulnerability-patching',
    name: 'Vulnerability Patching',
    desc: 'Patch previous attack. Prevent the same attack happening again on target node.',
    role: 'defender',
    type: 'recover',
    icon: BandageIcon,
  },
  {
    id: 'cdr-forensic-investigation',
    name: 'Forensic Investigation',
    desc: 'Investigate abnormality from nodes. If previous attack success attacker remove 1 random card.',
    role: 'defender',
    type: 'recover',
    icon: FileSearchIcon,
  },
  {
    id: 'cdr-incident-response',
    name: 'Incident Response',
    desc: "Remove target node's lock status caused by Attack effect.",
    role: 'defender',
    type: 'recover',
    icon: ScrollTextIcon,
  },
  {
    id: 'cdr-threat-intelligence',
    name: 'Threat Intelligence',
    desc: 'Learn from previous attack. Recover 1 removed defense from target node.',
    role: 'defender',
    type: 'recover',
    icon: BookKeyIcon,
  },
];
