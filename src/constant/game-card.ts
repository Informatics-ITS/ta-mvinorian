import {
  BracesIcon,
  BugIcon,
  CircleIcon,
  FishIcon,
  FlameIcon,
  KeyRoundIcon,
  LayoutGridIcon,
  LockIcon,
  ShieldEllipsisIcon,
  SquareChartGanttIcon,
  VenetianMaskIcon,
  WorkflowIcon,
} from 'lucide-react';

import { GameCardType } from '@/lib/game-card';
import { getClientTranslations } from '@/lib/locale-client';

const t = await getClientTranslations();

export const GAME_CARDS: GameCardType[] = [
  // {
  //   id: 'cas-network-scanning',
  //   name: 'Network Scanning',
  //   desc: 'Scan the network. Reveal tokens of target node.',
  //   role: 'attacker',
  //   type: 'stealth',
  //   icon: NetworkIcon,
  // },
  // {
  //   id: 'cas-social-engineering',
  //   name: 'Social Engineering',
  //   desc: 'Manipulate defender action. Reveal 1 random defender card in hand.',
  //   role: 'attacker',
  //   type: 'stealth',
  //   icon: BrainIcon,
  // },
  // {
  //   id: 'cas-port-scanning',
  //   name: 'Port Scanning',
  //   desc: 'Scan for active port in target node. Reveal 1 active defense of target node.',
  //   role: 'attacker',
  //   type: 'stealth',
  //   icon: EthernetPortIcon,
  // },
  // {
  //   id: 'cas-vpn-tunneling',
  //   name: 'VPN Tunneling',
  //   desc: 'Use VPN to attack. Next attack cannot be detected.',
  //   role: 'attacker',
  //   type: 'stealth',
  //   icon: GlobeLockIcon,
  // },
  {
    id: 'cas-lateral-movement',
    name: 'Lateral Movement',
    desc: 'After successful attack. Reveal the security level of adjacent node.',
    role: 'attacker',
    type: 'stealth',
    icon: WorkflowIcon,
    effect: {},
  },
  {
    id: 'caa-sql-injection',
    name: 'SQL Injection',
    desc: t('game-card.sql-injection'),
    role: 'attacker',
    type: 'attack',
    icon: SquareChartGanttIcon,
    effect: {
      nodes: ['nh-database-server', 'nm-web-server'],
      stealTokens: 1,
    },
  },
  {
    id: 'caa-phishing-attack',
    name: 'Phising Attack',
    desc: t('game-card.phishing-attack'),
    role: 'attacker',
    type: 'attack',
    icon: FishIcon,
    effect: {
      nodes: ['nl-workstation'],
      stealTokens: 1,
    },
  },
  {
    id: 'caa-zero-day-exploit',
    name: 'Zero-Day Exploit',
    desc: t('game-card.zero-day-exploit'),
    role: 'attacker',
    type: 'attack',
    icon: CircleIcon,
    effect: {
      nodes: ['all'],
      stealTokens: 1,
      ignoredDefenses: 3,
    },
  },
  {
    id: 'caa-ransomware-attack',
    name: 'Ransomware Attack',
    desc: "Locks a node for 1 turn steal 1 data token if doesn't countered next turn.",
    role: 'attacker',
    type: 'attack',
    icon: BugIcon,
    effect: {},
  },
  {
    id: 'caa-man-in-the-middle',
    name: 'Man-in-the-Middle',
    desc: 'Sniff adjacent node. Redirect Attack effects to adjacent node.',
    role: 'attacker',
    type: 'attack',
    icon: VenetianMaskIcon,
    effect: {},
  },
  // {
  //   id: 'cad-ddos-attack',
  //   name: 'DDoS Attack',
  //   desc: 'Distributed Denial of Service. Prevent the defender from playing a card on target node this turn.',
  //   role: 'attacker',
  //   type: 'disrupt',
  //   icon: RocketIcon,
  // },
  // {
  //   id: 'cad-log-tampering',
  //   name: 'Log Tampering',
  //   desc: "Modify the log. Negate Detect card's effect this turn if played by defender.",
  //   role: 'attacker',
  //   type: 'disrupt',
  //   icon: EraserIcon,
  // },
  // {
  //   id: 'cad-backdoor-installation',
  //   name: 'Backdoor Installation',
  //   desc: 'Install backdoor on target node. Next attack on target node will ignore 1 defense.',
  //   role: 'attacker',
  //   type: 'disrupt',
  //   icon: DoorOpenIcon,
  // },
  // {
  //   id: 'cad-privilege-escalation',
  //   name: 'Privilege Escalation',
  //   desc: "Gain admin access. Ignore Block card's effect on target node if played by defender.",
  //   role: 'attacker',
  //   type: 'disrupt',
  //   icon: ShieldUserIcon,
  // },
  // {
  //   id: 'cad-session-hijacking',
  //   name: 'Session Hijacking',
  //   desc: 'Copy the effect of last successful Attack card and played on target node.',
  //   role: 'attacker',
  //   type: 'disrupt',
  //   icon: CookieIcon,
  // },
  {
    id: 'cdb-firewall-upgrade',
    name: 'Firewall Upgrade',
    desc: t('game-card.firewall-upgrade'),
    role: 'defender',
    type: 'block',
    icon: FlameIcon,
    effect: {
      nodes: ['nh-database-server', 'nm-web-server'],
      addDefense: 'd-firewall',
    },
  },
  {
    id: 'cdb-access-control-policy',
    name: 'Access Control Policy',
    desc: 'Deploy Access Control Policy. Prevent attacker to play Attack card next turn.',
    role: 'defender',
    type: 'block',
    icon: LockIcon,
    effect: {},
  },
  {
    id: 'cdb-mfa-implementation',
    name: 'MFA Implementation',
    desc: t('game-card.mfa-implementation'),
    role: 'defender',
    type: 'block',
    icon: KeyRoundIcon,
    effect: {
      nodes: ['nm-email-server', 'nl-workstation'],
      addDefense: 'd-mfa',
    },
  },
  {
    id: 'cdb-endpoint-protection',
    name: 'Endpoint Protection',
    desc: 'If attacker plays Zero-Day Exploit on target node attacker must remove 1 random card.',
    role: 'defender',
    type: 'block',
    icon: BracesIcon,
    effect: {},
  },
  {
    id: 'cdb-network-segmentation',
    name: 'Network Segmentation',
    desc: t('game-card.network-segmentation'),
    role: 'defender',
    type: 'block',
    icon: LayoutGridIcon,
    effect: {
      nodes: ['all'],
      ignoreAttack: true,
    },
  },
  {
    id: 'cdd-obfuscation-shield',
    name: 'Obfuscation Shield',
    desc: 'Add obfuscation shield. Hide target node security level if attacker use Stealth card.',
    role: 'defender',
    type: 'detect',
    icon: ShieldEllipsisIcon,
    effect: {},
  },
  // {
  //   id: 'cdd-security-awareness',
  //   name: 'Security Awareness',
  //   desc: 'Train opeartor security awareness. Reveal 1 attacker card in hand.',
  //   role: 'defender',
  //   type: 'detect',
  //   icon: BookLockIcon,
  // },
  // {
  //   id: 'cdd-honeypot',
  //   name: 'Honeypot',
  //   desc: "Deploy honeypot on target node. Ignore Stealth card's effect on target node if played by attacker.",
  //   role: 'defender',
  //   type: 'detect',
  //   icon: AmphoraIcon,
  // },
  // {
  //   id: 'cdd-network-monitoring',
  //   name: 'Network Monitoring',
  //   desc: "Monitor network. Reveal attacker's last played card.",
  //   role: 'defender',
  //   type: 'detect',
  //   icon: NetworkIcon,
  // },
  // {
  //   id: 'cdd-log-analysis',
  //   name: 'Log Analysis',
  //   desc: 'Analyze log from nodes. Reveal attacked node if an attack happen last turn.',
  //   role: 'defender',
  //   type: 'detect',
  //   icon: LogsIcon,
  // },
  // {
  //   id: 'cdr-data-recovery-protocol',
  //   name: 'Data Recovery Protocol',
  //   desc: 'Repair target node data. Return 1 stolen data token from target node.',
  //   role: 'defender',
  //   type: 'recover',
  //   icon: DatabaseBackupIcon,
  // },
  // {
  //   id: 'cdr-vulnerability-patching',
  //   name: 'Vulnerability Patching',
  //   desc: 'Patch previous attack. Prevent the same attack happening again on target node.',
  //   role: 'defender',
  //   type: 'recover',
  //   icon: BandageIcon,
  // },
  // {
  //   id: 'cdr-forensic-investigation',
  //   name: 'Forensic Investigation',
  //   desc: 'Investigate abnormality from nodes. If previous attack success attacker remove 1 random card.',
  //   role: 'defender',
  //   type: 'recover',
  //   icon: FileSearchIcon,
  // },
  // {
  //   id: 'cdr-incident-response',
  //   name: 'Incident Response',
  //   desc: "Remove target node's lock status caused by Attack effect.",
  //   role: 'defender',
  //   type: 'recover',
  //   icon: ScrollTextIcon,
  // },
  // {
  //   id: 'cdr-threat-intelligence',
  //   name: 'Threat Intelligence',
  //   desc: 'Learn from previous attack. Recover 1 removed defense from target node.',
  //   role: 'defender',
  //   type: 'recover',
  //   icon: BookKeyIcon,
  // },
];
